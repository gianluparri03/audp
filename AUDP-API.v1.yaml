openapi: 3.0.0
info:
  title: AUDP API
  version: '1.0'
  description: ''
  license:
    name: MIT
    url: 'https://github.com/gianluparri03/AUDP/blob/master/LICENSE'
servers:
  - url: 'http://localhost:8080'
paths:
  /controllers:
    get:
      summary: ListControllers
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type:
                  - 'null'
                  - array
                items:
                  $ref: '#/components/schemas/Controller'
              examples:
                without_controllers:
                  value: null
                with_controllers:
                  value:
                    - id: 1
                      name: Test
                      ip: 192.168.1.3
                      port: 8080
                      sleeping: false
                      devices: null
      operationId: get-controllers
      description: Get the list of controllers
      parameters: []
    post:
      summary: CreateController
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller'
              examples:
                Created:
                  value:
                    id: 2
                    ip: 192.168.1.5
                    port: 8080
                    name: Raspberry
                    devices: null
                    sleeping: false
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  description:
                    type: string
                required:
                  - error
              examples:
                Missing name:
                  value:
                    error: invalid controller
                    description: "Missing controller's name"
                Missing Port:
                  value:
                    error: invalid controller
                    description: "Missing controller's port"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  description:
                    type: string
                required:
                  - error
              examples:
                Name Taken:
                  value:
                    error: "can't save controller"
                    description: "Controller's name already used"
                IP Taken:
                  value:
                    error: "can't save controller"
                    description: "Controller's IP already used"
      operationId: post-controllers
      description: Create a new controller
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Controller'
            examples: {}
  '/controllers/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
    get:
      summary: GetController
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller'
              examples:
                Test:
                  value:
                    id: 1
                    ip: 192.168.1.3
                    port: 8080
                    name: Test
                    devices: null
                    sleeping: false
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Error:
                  value:
                    error: controller not found
                    description: "Didn't find a controller with that name"
      operationId: get-controllers-name
      description: Get a specific controller by the name
    delete:
      summary: DeleteController
      tags: []
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Found:
                  value:
                    error: "Can't delete controller"
                    description: "Controller doesn't exist"
      operationId: delete-controllers-name
      description: Delete a specific controller
  '/controllers/{name}/wakeup/{port}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
      - schema:
          type: string
        name: port
        in: path
        required: true
    put:
      summary: WakeUpController
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Controller'
              examples:
                Woken Up:
                  value:
                    id: 1
                    ip: 127.0.0.1
                    port: 3030
                    name: Raspberry
                    devices: null
                    sleeping: false
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Not Found:
                  value:
                    error: "can't wake up controller"
                    description: "Controller doesn't exist"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              examples:
                Controller Not Sleeping:
                  value:
                    error: "can't wake up controller"
                    description: "Controller isn't sleeping"
                IP Already Used:
                  value:
                    error: "can't wake up controller"
                    description: IP already used
      operationId: put-controllers-name-wakeup-port
      description: Wake up a controller
components:
  schemas:
    Controller:
      title: Controller
      type: object
      description: ''
      properties:
        id:
          type: integer
        ip:
          type: string
        port:
          type: integer
        code:
          type: string
        name:
          type: string
        devices:
          type: array
          items: {}
        sleeping:
          type: boolean
      required:
        - id
        - ip
        - port
        - code
        - name
    Device:
      title: Device
      type: object
      properties:
        id:
          type: integer
        cid:
          type: integer
        gpio:
          type: integer
        name:
          type: string
        status:
          type: boolean
      required:
        - id
        - cid
        - gpio
        - name
        - status
      description: ''
    Error:
      title: Error
      type: object
      description: ''
      properties:
        error:
          type: string
        description:
          type: string
      required:
        - error
  securitySchemes: {}
